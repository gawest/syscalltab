#!/bin/bash
ASM_UNISTD="/usr/include/asm"

GENSCRIPT=`basename $0`
GENHOST=`hostname`
KARCH=`uname -m`
KRELEASE=`uname -r`

UNISTD_TEST_H="_unistd_test.h"
SYSCALL_EXPAND_H="_syscall_expand.h"
SYSCALLTAB_H="syscalltab.h"

write_expand=""
keep_temporary=""

function help()
{
    echo -e "Usage: $GENSCRIPT [-h] [-t]"
    echo -e ""
    echo -e "  -e   write out expanded unistd header output to $SYSCALL_EXPAND_H"
    echo -e "  -t   keep temporal unistd header output file $UNISTD_TEST_H"
    echo -e "  -h   print out this help message"
    echo -e ""

    exit 1
}

function append_header()
{
    HEADER_LINE=$1

    echo -e "$HEADER_LINE" >> $SYSCALLTAB_H
    return 0
}

while getopts the cop; do
    case $cop in
        h)
          help;
          ;;
        e)
          write_expand="SET"
          ;;
        t)
          keep_temporary="SET"
          ;;
        *)
          help;
          ;;
    esac
done

if [ ! -d "$ASM_UNISTD" ];then
    echo "$ASM_UNISTD: directory doesn't exist..cannot proceed"
    exit 2
fi

# output test header to ultimately grab the #define values
# for the systems calls __NR_<syscall name>
echo "#include <unistd.h>" > $UNISTD_TEST_H

if [ ! -e "$UNISTD_TEST_H" ];then
    echo "$UNISTD_TEST_H: file doesn't exist..cannot proceed"
    exit 2
fi

# take GCC environment over static value and check
# executability
if [ -z $GCC ];then
    GCC=/usr/bin/gcc

    if [ -e $GCC ];then
        if [ ! -x $GCC ];then
            echo "$GCC: file is not executable for you..cannot proceed"
            rm -f $UNISTD_TEST_H
            exit 3
        fi
    else
        echo "$GCC: file doesn't exist..cannot proceed"
        rm -f $UNISTD_TEST_H
        exit 3
    fi
fi

# this is the important part of this process. this command
# effectively runs the preprocessor of gcc and expands the #define
# values. From this we generate the syscalltab.h file and also
# will be able to run validations against it from python tests
$GCC -I$ASM_UNISTD -dM -E $UNISTD_TEST_H -o $SYSCALL_EXPAND_H
retval=$?

if [ "$retval" -ne "0" ];then
    echo "$GCC returned non-zero exit code: $retval"
    echo "check $UNISTD_TEST_H content"
    exit $retval
fi

# if all we want is to write out the expanded
# #define macro content, we should already have
# it at this point, so exit out
if [ "X$write_expand" != "X" ];then
    if [ "X$keep_temporary" == "X" ];then
        rm -f $UNISTD_TEST_H
    fi

    exit 0
fi

GENDATETIME=`date +"%Y-%m-%dT%H:%M:%S"`

echo > $SYSCALLTAB_H
append_header '/*'
append_header "  $SYSCALLTAB_H:"
append_header "    table map for systems calls on $GENHOST"
append_header ""
append_header "  auto-generated by $GENSCRIPT on $GENDATETIME"
append_header '*/'
append_header ""

append_header "#include <unistd.h>"
append_header ""
append_header "#define SC_KERNEL_ARCH \"$KARCH\""
append_header "#define SC_KERNEL_RELEASE \"$KRELEASE\""
append_header ""
append_header "#define SC_VALUE(s) { #s, __NR_##s }"
append_header "#define SC_ARRAY_LENGTH sizeof(SYSCALL_MAP)/sizeof(sctab)"
append_header ""
append_header "typedef struct syscalltab"
append_header "{"
append_header "    char* sc_name;"
append_header "    int sc_value;"
append_header "} sctab;"
append_header ""
append_header "sctab SYSCALL_MAP[] ="
append_header "{"

for SYSCALL in `grep -P '^\#define __NR_' $SYSCALL_EXPAND_H | awk '{ print $2 }' | sed -e 's/^__NR_//g'`
do 
    append_header "  SC_VALUE($SYSCALL),"
done

append_header "};"
append_header ""

if [ "X$keep_temporary" == "X" ];then
    rm -f $UNISTD_TEST_H $SYSCALL_EXPAND_H
fi

exit 0
